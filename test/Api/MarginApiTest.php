<?php
/**
 * MarginApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.5.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * MarginApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class MarginApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for sapiV1BnbBurnGet
     *
     * Get All Isolated Margin Symbol(USER_DATA).
     *
     */
    public function testSapiV1BnbBurnGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1BnbBurnPost
     *
     * Toggle BNB Burn On Spot Trade And Margin Interest (USER_DATA).
     *
     */
    public function testSapiV1BnbBurnPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginAccountGet
     *
     * Query Cross Margin Account Details (USER_DATA).
     *
     */
    public function testSapiV1MarginAccountGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginAllAssetsGet
     *
     * Get All Margin Assets (MARKET_DATA).
     *
     */
    public function testSapiV1MarginAllAssetsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginAllOrderListGet
     *
     * Query Margin Account's all OCO (USER_DATA).
     *
     */
    public function testSapiV1MarginAllOrderListGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginAllOrdersGet
     *
     * Query Margin Account's All Orders (USER_DATA).
     *
     */
    public function testSapiV1MarginAllOrdersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginAllPairsGet
     *
     * Get All Cross Margin Pairs (MARKET_DATA).
     *
     */
    public function testSapiV1MarginAllPairsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginAssetGet
     *
     * Query Margin Asset (MARKET_DATA).
     *
     */
    public function testSapiV1MarginAssetGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginCrossMarginDataGet
     *
     * Query Cross Margin Fee Data (USER_DATA).
     *
     */
    public function testSapiV1MarginCrossMarginDataGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginDribbletGet
     *
     * Margin Dustlog (USER_DATA).
     *
     */
    public function testSapiV1MarginDribbletGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginForceLiquidationRecGet
     *
     * Get Force Liquidation Record (USER_DATA).
     *
     */
    public function testSapiV1MarginForceLiquidationRecGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginInterestHistoryGet
     *
     * Get Interest History (USER_DATA).
     *
     */
    public function testSapiV1MarginInterestHistoryGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginInterestRateHistoryGet
     *
     * Margin Interest Rate History (USER_DATA).
     *
     */
    public function testSapiV1MarginInterestRateHistoryGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginIsolatedAccountDelete
     *
     * Disable Isolated Margin Account (TRADE).
     *
     */
    public function testSapiV1MarginIsolatedAccountDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginIsolatedAccountGet
     *
     * Query Isolated Margin Account Info (USER_DATA).
     *
     */
    public function testSapiV1MarginIsolatedAccountGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginIsolatedAccountLimitGet
     *
     * Query Enabled Isolated Margin Account Limit (USER_DATA).
     *
     */
    public function testSapiV1MarginIsolatedAccountLimitGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginIsolatedAccountPost
     *
     * Enable Isolated Margin Account (TRADE).
     *
     */
    public function testSapiV1MarginIsolatedAccountPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginIsolatedAllPairsGet
     *
     * Get All Isolated Margin Symbol(USER_DATA).
     *
     */
    public function testSapiV1MarginIsolatedAllPairsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginIsolatedMarginDataGet
     *
     * Query Isolated Margin Fee Data (USER_DATA).
     *
     */
    public function testSapiV1MarginIsolatedMarginDataGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginIsolatedMarginTierGet
     *
     * Query Isolated Margin Tier Data (USER_DATA).
     *
     */
    public function testSapiV1MarginIsolatedMarginTierGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginIsolatedPairGet
     *
     * Query Isolated Margin Symbol (USER_DATA).
     *
     */
    public function testSapiV1MarginIsolatedPairGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginIsolatedTransferGet
     *
     * Get Isolated Margin Transfer History (USER_DATA).
     *
     */
    public function testSapiV1MarginIsolatedTransferGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginIsolatedTransferPost
     *
     * Isolated Margin Account Transfer (MARGIN).
     *
     */
    public function testSapiV1MarginIsolatedTransferPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginLoanGet
     *
     * Query Loan Record (USER_DATA).
     *
     */
    public function testSapiV1MarginLoanGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginLoanPost
     *
     * Margin Account Borrow (MARGIN).
     *
     */
    public function testSapiV1MarginLoanPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginMaxBorrowableGet
     *
     * Query Max Borrow (USER_DATA).
     *
     */
    public function testSapiV1MarginMaxBorrowableGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginMaxTransferableGet
     *
     * Query Max Transfer-Out Amount (USER_DATA).
     *
     */
    public function testSapiV1MarginMaxTransferableGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginMyTradesGet
     *
     * Query Margin Account's Trade List (USER_DATA).
     *
     */
    public function testSapiV1MarginMyTradesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginOpenOrderListGet
     *
     * Query Margin Account's Open OCO (USER_DATA).
     *
     */
    public function testSapiV1MarginOpenOrderListGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginOpenOrdersDelete
     *
     * Margin Account Cancel all Open Orders on a Symbol (TRADE).
     *
     */
    public function testSapiV1MarginOpenOrdersDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginOpenOrdersGet
     *
     * Query Margin Account's Open Orders (USER_DATA).
     *
     */
    public function testSapiV1MarginOpenOrdersGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginOrderDelete
     *
     * Margin Account Cancel Order (TRADE).
     *
     */
    public function testSapiV1MarginOrderDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginOrderGet
     *
     * Query Margin Account's Order (USER_DATA).
     *
     */
    public function testSapiV1MarginOrderGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginOrderListDelete
     *
     * Margin Account Cancel OCO (TRADE).
     *
     */
    public function testSapiV1MarginOrderListDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginOrderListGet
     *
     * Query Margin Account's OCO (USER_DATA).
     *
     */
    public function testSapiV1MarginOrderListGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginOrderOcoPost
     *
     * Margin Account New OCO (TRADE).
     *
     */
    public function testSapiV1MarginOrderOcoPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginOrderPost
     *
     * Margin Account New Order (TRADE).
     *
     */
    public function testSapiV1MarginOrderPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginPairGet
     *
     * Query Cross Margin Pair (MARKET_DATA).
     *
     */
    public function testSapiV1MarginPairGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginPriceIndexGet
     *
     * Query Margin PriceIndex (MARKET_DATA).
     *
     */
    public function testSapiV1MarginPriceIndexGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginRateLimitOrderGet
     *
     * Query Current Margin Order Count Usage (TRADE).
     *
     */
    public function testSapiV1MarginRateLimitOrderGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginRepayGet
     *
     * Query Repay Record (USER_DATA).
     *
     */
    public function testSapiV1MarginRepayGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginRepayPost
     *
     * Margin Account Repay (MARGIN).
     *
     */
    public function testSapiV1MarginRepayPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginTradeCoeffGet
     *
     * Get Summary of Margin account (USER_DATA).
     *
     */
    public function testSapiV1MarginTradeCoeffGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginTransferGet
     *
     * Get Cross Margin Transfer History (USER_DATA).
     *
     */
    public function testSapiV1MarginTransferGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sapiV1MarginTransferPost
     *
     * Cross Margin Account Transfer (MARGIN).
     *
     */
    public function testSapiV1MarginTransferPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
